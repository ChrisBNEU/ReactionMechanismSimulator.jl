module RMS
    using Pkg
    using PyCall
    push!(PyVector(pyimport("sys")["path"]), "")
    const Chem = PyNULL()
    const molecule = PyNULL()
    const pydot = PyNULL()
    const yml = PyNULL()
    function __init__()
        copy!(Chem,pyimport_conda("rdkit.Chem","rdkit","rmg"))
        copy!(molecule,pyimport_conda("rmgpy.molecule","rmgpy","rmg"))
        copy!(pydot,pyimport_conda("pydot","pydot","rmg"))
        push!(PyVector(pyimport("sys")["path"]), joinpath(Pkg.dir("RMS"),"src"))
        copy!(yml,pyimport("yml"))
    end
    include("Constants.jl")
    include("Tools.jl")
    include("Calculators/RateUncertainty.jl")
    include("Calculators/ThermoUncertainty.jl")
    include("Calculators/Thermo.jl")
    include("Calculators/Diffusion.jl")
    include("Calculators/Rate.jl")
    include("Calculators/Viscosity.jl")
    include("Species.jl")
    include("Solvent.jl")
    include("Reaction.jl")
    include("Phase.jl")
    include("PhaseState.jl")
    include("Interface.jl")
    include("Domain.jl")
    include("Parse.jl")
    include("Reactor.jl")
    include("Simulation.jl")
    include("fluxdiagrams.jl")
    include("Plotting.jl")
end
